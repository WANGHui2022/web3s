
package org.web3s.abit

import org.scalatest.funsuite.AnyFunSuite
import org.web3s.abi.datatypes.*
import org.web3s.abi.datatypes.generated.*
import org.web3s.abi.datatypes.primitive.*
import org.web3s.abi.{Encodable, TypeEncoder}

class TypeEncoderPackedTest extends AnyFunSuite :
  test("AddressEncodePacked"){
    val address = new Address("0x663e27AdC18d862dA9A82f060310621D379e469a")
    assert("663e27adc18d862da9a82f060310621d379e469a" == TypeEncoder.encodePacked(address))
    val addressLong = new Address(256, "0xa04462684b510796c186d19abfa6929742f79394583d6efb1243bbb473f21d9f")
    assert("a04462684b510796c186d19abfa6929742f79394583d6efb1243bbb473f21d9f" == TypeEncoder.encodePacked(addressLong))
  }

  test("BoolEncodePacked"){
    assert(TypeEncoder.encodePacked(new Bool(false)) == "00")
    assert(TypeEncoder.encodePacked(new Bool(true)) == "01")
  }

//  test("UintEncodePacked"){
//    val zero8 = new Nothing(BigInteger.ZERO)
//    assert("00", TypeEncoder.encodePacked(zero8))
//    val max8 = new Nothing(255)
//    assert("ff", TypeEncoder.encodePacked(max8))
//    val zero16 = new Nothing(BigInteger.ZERO)
//    assert("0000", TypeEncoder.encodePacked(zero16))
//    val max16 = new Nothing(65535)
//    assert("ffff", TypeEncoder.encodePacked(max16))
//    val zero24 = new Nothing(BigInteger.ZERO)
//    assert("000000", TypeEncoder.encodePacked(zero24))
//    val max24 = new Nothing(16777215)
//    assert("ffffff", TypeEncoder.encodePacked(max24))
//    val zero32 = new Nothing(BigInteger.ZERO)
//    assert("00000000", TypeEncoder.encodePacked(zero32))
//    val max32 = new Nothing(BigInteger.valueOf(4294967295L))
//    assert("ffffffff", TypeEncoder.encodePacked(max32))
//    val zero40 = new Nothing(BigInteger.ZERO)
//    assert("0000000000", TypeEncoder.encodePacked(zero40))
//    val max40 = new Nothing(BigInteger.valueOf(1099511627775L))
//    assert("ffffffffff", TypeEncoder.encodePacked(max40))
//    val zero48 = new Nothing(BigInteger.ZERO)
//    assert("000000000000", TypeEncoder.encodePacked(zero48))
//    val max48 = new Nothing(BigInteger.valueOf(281474976710655L))
//    assert("ffffffffffff", TypeEncoder.encodePacked(max48))
//    val zero56 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000", TypeEncoder.encodePacked(zero56))
//    val max56 = new Nothing(BigInteger.valueOf(72057594037927935L))
//    assert("ffffffffffffff", TypeEncoder.encodePacked(max56))
//    val zero64 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000", TypeEncoder.encodePacked(zero64))
//    val maxLong = new Nothing(BigInteger.valueOf(Long.MAX_VALUE))
//    assert("7fffffffffffffff", TypeEncoder.encodePacked(maxLong))
//    val maxValue64 = new Nothing(new BigInteger("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", 16))
//    assert("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(maxValue64))
//    val largeValue = new Nothing(new BigInteger("fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe", 16))
//    assert("fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe", TypeEncoder.encodePacked(largeValue))
//    val zero72 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000", TypeEncoder.encodePacked(zero72))
//    val max72 = new Nothing(new BigInteger("4722366482869645213695"))
//    assert("ffffffffffffffffff", TypeEncoder.encodePacked(max72))
//    val zero80 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000", TypeEncoder.encodePacked(zero80))
//    val max80 = new Nothing(new BigInteger("1208925819614629174706175"))
//    assert("ffffffffffffffffffff", TypeEncoder.encodePacked(max80))
//    val zero88 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000", TypeEncoder.encodePacked(zero88))
//    val max88 = new Nothing(new BigInteger("309485009821345068724781055"))
//    assert("ffffffffffffffffffffff", TypeEncoder.encodePacked(max88))
//    val zero96 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000", TypeEncoder.encodePacked(zero96))
//    val max96 = new Nothing(new BigInteger("79228162514264337593543950335"))
//    assert("ffffffffffffffffffffffff", TypeEncoder.encodePacked(max96))
//    val zero104 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000", TypeEncoder.encodePacked(zero104))
//    val max104 = new Nothing(new BigInteger("20282409603651670423947251286015"))
//    assert("ffffffffffffffffffffffffff", TypeEncoder.encodePacked(max104))
//    val zero112 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000000000", TypeEncoder.encodePacked(zero112))
//    val max112 = new Nothing(new BigInteger("5192296858534827628530496329220095"))
//    assert("ffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max112))
//    val zero120 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000000000", TypeEncoder.encodePacked(zero120))
//    val max120 = new Nothing(new BigInteger("1329227995784915872903807060280344575"))
//    assert("ffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max120))
//    val zero128 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000000000", TypeEncoder.encodePacked(zero128))
//    val max128 = new Nothing(new BigInteger("340282366920938463463374607431768211455"))
//    assert("ffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max128))
//    val zero136 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000000000000000", TypeEncoder.encodePacked(zero136))
//    val max136 = new Nothing(new BigInteger("87112285931760246646623899502532662132735"))
//    assert("ffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max136))
//    val zero144 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000000000000000", TypeEncoder.encodePacked(zero144))
//    val max144 = new Nothing(new BigInteger("22300745198530623141535718272648361505980415"))
//    assert("ffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max144))
//    val zero152 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000000000000000", TypeEncoder.encodePacked(zero152))
//    val max152 = new Nothing(new BigInteger("5708990770823839524233143877797980545530986495"))
//    assert("ffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max152))
//    val zero160 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero160))
//    val max160 = new Nothing(new BigInteger("1461501637330902918203684832716283019655932542975"))
//    assert("ffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max160))
//    val zero168 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero168))
//    val max168 = new Nothing(new BigInteger("374144419156711147060143317175368453031918731001855"))
//    assert("ffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max168))
//    val zero176 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero176))
//    val max176 = new Nothing(new BigInteger("95780971304118053647396689196894323976171195136475135"))
//    assert("ffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max176))
//    val zero184 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero184))
//    val max184 = new Nothing(new BigInteger("24519928653854221733733552434404946937899825954937634815"))
//    assert("ffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max184))
//    val zero192 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero192))
//    val max192 = new Nothing(new BigInteger("6277101735386680763835789423207666416102355444464034512895"))
//    assert("ffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max192))
//    val zero200 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero200))
//    val max200 = new Nothing(new BigInteger("1606938044258990275541962092341162602522202993782792835301375"))
//    assert("ffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max200))
//    val zero208 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero208))
//    val max208 = new Nothing(new BigInteger("411376139330301510538742295639337626245683966408394965837152255"))
//    assert("ffffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max208))
//    val zero216 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero216))
//    val max216 = new Nothing(new BigInteger("105312291668557186697918027683670432318895095400549111254310977535"))
//    assert("ffffffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max216))
//    val zero224 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero224))
//    val max224 = new Nothing(new BigInteger("26959946667150639794667015087019630673637144422540572481103610249215"))
//    assert("ffffffffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max224))
//    val zero232 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero232))
//    val max232 = new Nothing(new BigInteger("6901746346790563787434755862277025452451108972170386555162524223799295"))
//    assert("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max232))
//    val zero240 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero240))
//    val max240 = new Nothing(new BigInteger("1766847064778384329583297500742918515827483896875618958121606201292619775"))
//    assert("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max240))
//    val zero248 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero248))
//    val max248 = new Nothing(new BigInteger("452312848583266388373324160190187140051835877600158453279131187530910662655"))
//    assert("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max248))
//  }
//
//  test("IntEncodePacked"){
//    val zero8 = new Nothing(BigInteger.ZERO)
//    assert("00", TypeEncoder.encodePacked(zero8))
//    val max8 = new Nothing(BigInteger.valueOf(127))
//    assert("7f", TypeEncoder.encodePacked(max8))
//    val min8 = new Nothing(BigInteger.valueOf(-128))
//    assert("80", TypeEncoder.encodePacked(min8))
//    val zero16 = new Nothing(BigInteger.ZERO)
//    assert("0000", TypeEncoder.encodePacked(zero16))
//    val max16 = new Nothing(BigInteger.valueOf(32767))
//    assert("7fff", TypeEncoder.encodePacked(max16))
//    val min16 = new Nothing(BigInteger.valueOf(-32768))
//    assert("8000", TypeEncoder.encodePacked(min16))
//    val zero24 = new Nothing(BigInteger.ZERO)
//    assert("000000", TypeEncoder.encodePacked(zero24))
//    val max24 = new Nothing(BigInteger.valueOf(8388607))
//    assert("7fffff", TypeEncoder.encodePacked(max24))
//    val min24 = new Nothing(BigInteger.valueOf(-8388608))
//    assert("800000", TypeEncoder.encodePacked(min24))
//    val zero32 = new Nothing(BigInteger.ZERO)
//    assert("00000000", TypeEncoder.encodePacked(zero32))
//    val max32 = new Nothing(BigInteger.valueOf(2147483647))
//    assert("7fffffff", TypeEncoder.encodePacked(max32))
//    val min32 = new Nothing(BigInteger.valueOf(-2147483648))
//    assert("80000000", TypeEncoder.encodePacked(min32))
//    val zero40 = new Nothing(BigInteger.ZERO)
//    assert("0000000000", TypeEncoder.encodePacked(zero40))
//    val max40 = new Nothing(BigInteger.valueOf(549755813887L))
//    assert("7fffffffff", TypeEncoder.encodePacked(max40))
//    val min40 = new Nothing(BigInteger.valueOf(-549755813888L))
//    assert("8000000000", TypeEncoder.encodePacked(min40))
//    val zero48 = new Nothing(BigInteger.ZERO)
//    assert("000000000000", TypeEncoder.encodePacked(zero48))
//    val max48 = new Nothing(BigInteger.valueOf(140737488355327L))
//    assert("7fffffffffff", TypeEncoder.encodePacked(max48))
//    val min48 = new Nothing(BigInteger.valueOf(-140737488355328L))
//    assert("800000000000", TypeEncoder.encodePacked(min48))
//    val zero56 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000", TypeEncoder.encodePacked(zero56))
//    val max56 = new Nothing(BigInteger.valueOf(36028797018963967L))
//    assert("7fffffffffffff", TypeEncoder.encodePacked(max56))
//    val min56 = new Nothing(BigInteger.valueOf(-36028797018963968L))
//    assert("80000000000000", TypeEncoder.encodePacked(min56))
//    val zero64 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000", TypeEncoder.encodePacked(zero64))
//    val max64 = new Nothing(BigInteger.valueOf(Long.MAX_VALUE))
//    assert("7fffffffffffffff", TypeEncoder.encodePacked(max64))
//    val min64 = new Nothing(BigInteger.valueOf(Long.MIN_VALUE))
//    assert("8000000000000000", TypeEncoder.encodePacked(min64))
//    val zero72 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000", TypeEncoder.encodePacked(zero72))
//    val max72 = new Nothing(new BigInteger("2361183241434822606847"))
//    assert("7fffffffffffffffff", TypeEncoder.encodePacked(max72))
//    val min72 = new Nothing(new BigInteger("-2361183241434822606848"))
//    assert("800000000000000000", TypeEncoder.encodePacked(min72))
//    val zero80 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000", TypeEncoder.encodePacked(zero80))
//    val max80 = new Nothing(new BigInteger("604462909807314587353087"))
//    assert("7fffffffffffffffffff", TypeEncoder.encodePacked(max80))
//    val min80 = new Nothing(new BigInteger("-604462909807314587353088"))
//    assert("80000000000000000000", TypeEncoder.encodePacked(min80))
//    val zero88 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000", TypeEncoder.encodePacked(zero88))
//    val max88 = new Nothing(new BigInteger("154742504910672534362390527"))
//    assert("7fffffffffffffffffffff", TypeEncoder.encodePacked(max88))
//    val min88 = new Nothing(new BigInteger("-154742504910672534362390528"))
//    assert("8000000000000000000000", TypeEncoder.encodePacked(min88))
//    val zero96 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000", TypeEncoder.encodePacked(zero96))
//    val max96 = new Nothing(new BigInteger("39614081257132168796771975167"))
//    assert("7fffffffffffffffffffffff", TypeEncoder.encodePacked(max96))
//    val min96 = new Nothing(new BigInteger("-39614081257132168796771975168"))
//    assert("800000000000000000000000", TypeEncoder.encodePacked(min96))
//    val zero104 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000", TypeEncoder.encodePacked(zero104))
//    val max104 = new Nothing(new BigInteger("10141204801825835211973625643007"))
//    assert("7fffffffffffffffffffffffff", TypeEncoder.encodePacked(max104))
//    val min104 = new Nothing(new BigInteger("-10141204801825835211973625643008"))
//    assert("80000000000000000000000000", TypeEncoder.encodePacked(min104))
//    val zero112 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000000000", TypeEncoder.encodePacked(zero112))
//    val max112 = new Nothing(new BigInteger("2596148429267413814265248164610047"))
//    assert("7fffffffffffffffffffffffffff", TypeEncoder.encodePacked(max112))
//    val min112 = new Nothing(new BigInteger("-2596148429267413814265248164610048"))
//    assert("8000000000000000000000000000", TypeEncoder.encodePacked(min112))
//    val zero120 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000000000", TypeEncoder.encodePacked(zero120))
//    val max120 = new Nothing(new BigInteger("664613997892457936451903530140172287"))
//    assert("7fffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max120))
//    val min120 = new Nothing(new BigInteger("-664613997892457936451903530140172288"))
//    assert("800000000000000000000000000000", TypeEncoder.encodePacked(min120))
//    val zero128 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000000000", TypeEncoder.encodePacked(zero128))
//    val max128 = new Nothing(new BigInteger("170141183460469231731687303715884105727"))
//    assert("7fffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max128))
//    val min128 = new Nothing(new BigInteger("-170141183460469231731687303715884105728"))
//    assert("80000000000000000000000000000000", TypeEncoder.encodePacked(min128))
//    val zero136 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000000000000000", TypeEncoder.encodePacked(zero136))
//    val max136 = new Nothing(new BigInteger("43556142965880123323311949751266331066367"))
//    assert("7fffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max136))
//    val min136 = new Nothing(new BigInteger("-43556142965880123323311949751266331066368"))
//    assert("8000000000000000000000000000000000", TypeEncoder.encodePacked(min136))
//    val zero144 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000000000000000", TypeEncoder.encodePacked(zero144))
//    val max144 = new Nothing(new BigInteger("11150372599265311570767859136324180752990207"))
//    assert("7fffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max144))
//    val min144 = new Nothing(new BigInteger("-11150372599265311570767859136324180752990208"))
//    assert("800000000000000000000000000000000000", TypeEncoder.encodePacked(min144))
//    val zero152 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000000000000000", TypeEncoder.encodePacked(zero152))
//    val max152 = new Nothing(new BigInteger("2854495385411919762116571938898990272765493247"))
//    assert("7fffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max152))
//    val min152 = new Nothing(new BigInteger("-2854495385411919762116571938898990272765493248"))
//    assert("80000000000000000000000000000000000000", TypeEncoder.encodePacked(min152))
//    val zero160 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero160))
//    val max160 = new Nothing(new BigInteger("730750818665451459101842416358141509827966271487"))
//    assert("7fffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max160))
//    val min160 = new Nothing(new BigInteger("-730750818665451459101842416358141509827966271488"))
//    assert("8000000000000000000000000000000000000000", TypeEncoder.encodePacked(min160))
//    val zero168 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero168))
//    val max168 = new Nothing(new BigInteger("187072209578355573530071658587684226515959365500927"))
//    assert("7fffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max168))
//    val min168 = new Nothing(new BigInteger("-187072209578355573530071658587684226515959365500928"))
//    assert("800000000000000000000000000000000000000000", TypeEncoder.encodePacked(min168))
//    val zero176 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero176))
//    val max176 = new Nothing(new BigInteger("47890485652059026823698344598447161988085597568237567"))
//    assert("7fffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max176))
//    val min176 = new Nothing(new BigInteger("-47890485652059026823698344598447161988085597568237568"))
//    assert("80000000000000000000000000000000000000000000", TypeEncoder.encodePacked(min176))
//    val zero184 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero184))
//    val max184 = new Nothing(new BigInteger("12259964326927110866866776217202473468949912977468817407"))
//    assert("7fffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max184))
//    val min184 = new Nothing(new BigInteger("-12259964326927110866866776217202473468949912977468817408"))
//    assert("8000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(min184))
//    val zero192 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero192))
//    val max192 = new Nothing(new BigInteger("3138550867693340381917894711603833208051177722232017256447"))
//    assert("7fffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max192))
//    val min192 = new Nothing(new BigInteger("-3138550867693340381917894711603833208051177722232017256448"))
//    assert("800000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(min192))
//    val zero200 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero200))
//    val max200 = new Nothing(new BigInteger("803469022129495137770981046170581301261101496891396417650687"))
//    assert("7fffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max200))
//    val min200 = new Nothing(new BigInteger("-803469022129495137770981046170581301261101496891396417650688"))
//    assert("80000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(min200))
//    val zero208 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero208))
//    val max208 = new Nothing(new BigInteger("205688069665150755269371147819668813122841983204197482918576127"))
//    assert("7fffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max208))
//    val min208 = new Nothing(new BigInteger("-205688069665150755269371147819668813122841983204197482918576128"))
//    assert("8000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(min208))
//    val zero216 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero216))
//    val max216 = new Nothing(new BigInteger("52656145834278593348959013841835216159447547700274555627155488767"))
//    assert("7fffffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max216))
//    val min216 = new Nothing(new BigInteger("-52656145834278593348959013841835216159447547700274555627155488768"))
//    assert("800000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(min216))
//    val zero224 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero224))
//    val max224 = new Nothing(new BigInteger("13479973333575319897333507543509815336818572211270286240551805124607"))
//    assert("7fffffffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max224))
//    val min224 = new Nothing(new BigInteger("-13479973333575319897333507543509815336818572211270286240551805124608"))
//    assert("80000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(min224))
//    val zero232 = new Nothing(BigInteger.ZERO)
//    assert("0000000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero232))
//    val max232 = new Nothing(new BigInteger("3450873173395281893717377931138512726225554486085193277581262111899647"))
//    assert("7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max232))
//    val min232 = new Nothing(new BigInteger("-3450873173395281893717377931138512726225554486085193277581262111899648"))
//    assert("8000000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(min232))
//    val zero240 = new Nothing(BigInteger.ZERO)
//    assert("000000000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero240))
//    val max240 = new Nothing(new BigInteger("883423532389192164791648750371459257913741948437809479060803100646309887"))
//    assert("7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max240))
//    val min240 = new Nothing(new BigInteger("-883423532389192164791648750371459257913741948437809479060803100646309888"))
//    assert("800000000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(min240))
//    val zero248 = new Nothing(BigInteger.ZERO)
//    assert("00000000000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(zero248))
//    val max248 = new Nothing(new BigInteger("226156424291633194186662080095093570025917938800079226639565593765455331327"))
//    assert("7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", TypeEncoder.encodePacked(max248))
//    val min248 = new Nothing(new BigInteger("-226156424291633194186662080095093570025917938800079226639565593765455331328"))
//    assert("80000000000000000000000000000000000000000000000000000000000000", TypeEncoder.encodePacked(min248))
//    val minusOne = new Nothing(BigInteger.valueOf(-1))
//    assert(TypeEncoder.encodePacked(minusOne), "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
//  }
//
  test("StaticBytesEncodePacked"){
    val staticBytes = new Bytes6(Array[Byte](0, 1, 2, 3, 4, 5))
    assert(summon[Encodable[Bytes]].encodePacked(staticBytes) == "000102030405")
    val empty = new Bytes1(Array[Byte](0))
    assert(summon[Encodable[Bytes]].encodePacked(empty) == "00")
    val ones = new Bytes1(Array[Byte](127))
    assert(summon[Encodable[Bytes]].encodePacked(ones) == "7f")
    val dave = new Bytes4("dave".getBytes)
    assert(summon[Encodable[Bytes]].encodePacked(dave) == "64617665")
  }
//
  test("Utf8StringEncodePacked"){
    val string = new Utf8String("Hello, world!")
    assert("48656c6c6f2c20776f726c6421" == TypeEncoder.encodePacked(string))
    val largeString = new Utf8String("Very long string value for test!")
    assert("56657279206c6f6e6720737472696e672076616c756520666f72207465737421" == TypeEncoder.encodePacked(largeString))
    val veryLargeString = new Utf8String("Very long string value for test!Very long string value for test!")
    assert("56657279206c6f6e6720737472696e672076616c756520666f722074657374" + "2156657279206c6f6e6720737472696e672076616c756520666f72207465737421" == TypeEncoder.encodePacked(veryLargeString))
  }
//
//  test("StaticArrayEncodePacked"){
//    val empty = new Nothing(classOf[Nothing])
//    assert("", TypeEncoder.encodePacked(empty))
//    val array = new Nothing(classOf[Nothing], new Nothing(0x45), new Nothing(0x7), new Nothing(65535))
//    assert("0000000000000000000000000000000000000000000000000000000000000045" + "0000000000000000000000000000000000000000000000000000000000000007" + "000000000000000000000000000000000000000000000000000000000000ffff", TypeEncoder.encodePacked(array))
//    val strings = new Nothing(classOf[Nothing], new Nothing("test"), new Nothing("test"), new Nothing("test"))
//    Assertions.assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(strings))
//    val dynamicStuct = new Nothing(classOf[Nothing], new Nothing("", ""), new Nothing("id", "name"), new Nothing("", ""))
//    Assertions.assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(dynamicStuct))
//    val staticStruct = new Nothing(classOf[Nothing], new Nothing(BigInteger.ONE, BigInteger.ZERO), new Nothing(BigInteger.ONE, BigInteger.ZERO), new Nothing(BigInteger.ONE, BigInteger.ZERO))
//    Assertions.assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(staticStruct))
//    val ufixed = new Nothing(classOf[Nothing], new Nothing(BigInteger.valueOf(0x2), BigInteger.valueOf(0x2)), new Nothing(BigInteger.valueOf(0x8), BigInteger.valueOf(0x8)))
//    Assertions.assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(ufixed))
//    val fixed = new Nothing(classOf[Nothing], new Nothing(BigInteger.valueOf(0x2), BigInteger.valueOf(0x2)), new Nothing(BigInteger.valueOf(0x8), BigInteger.valueOf(0x8)))
//    Assertions.assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(fixed))
//    val arrayOfEmptyBytes = new Nothing(classOf[Nothing], new Nothing(new Array[Byte](0)), new Nothing(new Array[Byte](0)))
//    Assertions.assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(arrayOfEmptyBytes))
//  }
//
  test("DynamicBytesEncodePacked"){
    val dynamicBytes = new DynamicBytes(Array[Byte](0, 1, 2, 3, 4, 5))
    assert("0001020304050000000000000000000000000000000000000000000000000000" == TypeEncoder.encodePacked(dynamicBytes))
    val empty = new DynamicBytes(Array[Byte](0))
    assert("0000000000000000000000000000000000000000000000000000000000000000" == TypeEncoder.encodePacked(empty))
    val dave = new DynamicBytes("dave".getBytes)
    assert("6461766500000000000000000000000000000000000000000000000000000000" == TypeEncoder.encodePacked(dave))
    val loremIpsum = new DynamicBytes(("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod " + "tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim " + "veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex " + "ea commodo consequat. Duis aute irure dolor in reprehenderit in " + "voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur " + "sint occaecat cupidatat non proident, sunt in culpa qui officia " + "deserunt mollit anim id est laborum.").getBytes)
    assert("4c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73" + "656374657475722061646970697363696e6720656c69742c2073656420646f20" + "656975736d6f642074656d706f7220696e6369646964756e74207574206c6162" + "6f726520657420646f6c6f7265206d61676e6120616c697175612e2055742065" + "6e696d206164206d696e696d2076656e69616d2c2071756973206e6f73747275" + "6420657865726369746174696f6e20756c6c616d636f206c61626f726973206e" + "69736920757420616c697175697020657820656120636f6d6d6f646f20636f6e" + "7365717561742e2044756973206175746520697275726520646f6c6f7220696e" + "20726570726568656e646572697420696e20766f6c7570746174652076656c69" + "7420657373652063696c6c756d20646f6c6f726520657520667567696174206e" + "756c6c612070617269617475722e204578636570746575722073696e74206f63" + "63616563617420637570696461746174206e6f6e2070726f6964656e742c2073" + "756e7420696e2063756c706120717569206f666669636961206465736572756e" + "74206d6f6c6c697420616e696d20696420657374206c61626f72756d2e000000" == TypeEncoder.encodePacked(loremIpsum))
  }
//
//  test("DynamicArrayEncodePacked"){
//    val empty = new Nothing(classOf[Nothing])
//    assert("", TypeEncoder.encodePacked(empty))
//    val array = new Nothing(classOf[Nothing], new Nothing(BigInteger.ONE), new Nothing(BigInteger.valueOf(2)), new Nothing(BigInteger.valueOf(3)))
//    assert("0000000000000000000000000000000000000000000000000000000000000001" + "0000000000000000000000000000000000000000000000000000000000000002" + "0000000000000000000000000000000000000000000000000000000000000003", TypeEncoder.encodePacked(array))
//    val uints = new Nothing(classOf[Nothing], new Nothing(BigInteger.ONE), new Nothing(BigInteger.valueOf(2)))
//    assert("0000000000000000000000000000000000000000000000000000000000000001" + "0000000000000000000000000000000000000000000000000000000000000002", TypeEncoder.encodePacked(uints))
//    val strings = new Nothing(classOf[Nothing], new Nothing("one"), new Nothing("two"), new Nothing("three"))
//    Assertions.assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(strings))
//    val dynamicStuct = new Nothing(classOf[Nothing], new Nothing("", ""), new Nothing("id", "name"), new Nothing("", ""))
//    Assertions.assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(dynamicStuct))
//    val staticStruct = new Nothing(classOf[Nothing], new Nothing(BigInteger.ONE, BigInteger.ZERO), new Nothing(BigInteger.ONE, BigInteger.ZERO), new Nothing(BigInteger.ONE, BigInteger.ZERO))
//    Assertions.assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(staticStruct))
//    val ufixed = new Nothing(classOf[Nothing], new Nothing(BigInteger.valueOf(0x2), BigInteger.valueOf(0x2)), new Nothing(BigInteger.valueOf(0x8), BigInteger.valueOf(0x8)))
//    Assertions.assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(ufixed))
//    val fixed = new Nothing(classOf[Nothing], new Nothing(BigInteger.valueOf(0x2), BigInteger.valueOf(0x2)), new Nothing(BigInteger.valueOf(0x8), BigInteger.valueOf(0x8)))
//    Assertions.assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(fixed))
//    val arrayOfEmptyBytes = new Nothing(classOf[Nothing], new Nothing(new Array[Byte](0)), new Nothing(new Array[Byte](0)))
//    Assertions.assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(arrayOfEmptyBytes))
//  }

  test("PrimitiveByteEncodePacked"){
    assert("00" == PrimitiveType.encodePacked(PrimitiveByte(0.toByte)))
    assert("7f" == PrimitiveType.encodePacked( PrimitiveByte(127.toByte)))
  }

  test("PrimitiveCharEncodePacked"){
    assert("61" == PrimitiveType.encodePacked(PrimitiveChar('a')))
    assert("20" == PrimitiveType.encodePacked(PrimitiveChar(' ')))
  }

  test("PrimitiveIntEncodePacked"){
    assert("00000000" == PrimitiveType.encodePacked(PrimitiveInt(0)))
    assert("80000000" == PrimitiveType.encodePacked(PrimitiveInt(Int.MinValue)))
    assert("7fffffff" == PrimitiveType.encodePacked(PrimitiveInt(Int.MaxValue)))
  }

  test("PrimitiveShortEncodePacked"){
    assert("0000" == PrimitiveType.encodePacked(PrimitiveShort(0.toShort)))
    assert("8000" == PrimitiveType.encodePacked(PrimitiveShort(Short.MinValue)))
    assert("7fff" == PrimitiveType.encodePacked(PrimitiveShort(Short.MaxValue)))
  }

  test("PrimitiveLongEncodePacked"){
    assert("0000000000000000" == PrimitiveType.encodePacked(PrimitiveLong(0)))
    assert("8000000000000000" == PrimitiveType.encodePacked(PrimitiveLong(Long.MinValue)))
    assert("7fffffffffffffff" == PrimitiveType.encodePacked(PrimitiveLong(Long.MaxValue)))
  }

//  test("PrimitiveFloatEncodePacked() = assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(new Nothing(0)))
//
//  test("PrimitiveDouble() = assertThrows(classOf[UnsupportedOperationException], () => TypeEncoder.encodePacked(new Nothing(0)))
end TypeEncoderPackedTest
